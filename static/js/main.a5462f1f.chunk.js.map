{"version":3,"sources":["redux/actions/actionTypes.js","components/GroceryForm.js","components/GroceryItem.js","redux/actions/courseActions.js","components/GroceryEditForm.js","containers/GroceryContainer.js","App.js","redux/reducers/index.js","redux/reducers/courseReducer.js","index.js","redux/configureStore.js"],"names":["CREATE_COURSE","DELETE_COURSE","UPDATE_COURSE","InputText","styled","input","attrs","type","RowMarginBottom","div","ButtonSubmit","button","IconAdd","span","GroceryForm","this","props","handleSubmit","handleChange","courseTitle","onSubmit","onChange","value","className","Component","Row","Half","ItemCard","Button","Icon","GroceryItem","id","title","dispatch","editing","onClick","index","courseActions","connect","GroceryEditForm","handleEdit","GroceryCard","GroceryContainer","e","course","state","target","setState","handleEditChange","console","log","preventDefault","courses","map","key","App","rootReducer","combineReducers","action","filter","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5462f1f.chunk.js","sourcesContent":["// Action Types\nexport const CREATE_COURSE = \"CREATE_COURSE\";\nexport const DELETE_COURSE = \"DELETE_COURSE\";\nexport const UPDATE_COURSE = \"UPDATE_COURSE\";\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n// Make a common file for this styled-component\nconst InputText = styled.input.attrs({\n    type: \"text\"\n})`\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst RowMarginBottom = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ButtonSubmit = styled.button`\n  margin-left: 10px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 7px;\n`;\n\nconst IconAdd = styled.span`\n  font-size: 18px;\n  color: black;\n`;\n\nclass GroceryForm extends Component {\n    render() {\n        const { handleSubmit, handleChange, courseTitle } = this.props;\n        return (\n            <form onSubmit={handleSubmit}>\n                <h2>My Grocery List</h2>\n                <RowMarginBottom>\n                    <InputText onChange={handleChange} value={courseTitle} />\n                    <ButtonSubmit type=\"submit\">\n                        <IconAdd className=\"material-icons\">add</IconAdd>\n                    </ButtonSubmit>\n                </RowMarginBottom>\n            </form>\n        );\n    }\n}\n\nexport default GroceryForm;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport * as courseActions from \"../redux/actions/courseActions\";\n\n// *** Make a common file for these styled-components\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Half = styled.div`\n  width: 50%;\n`;\n\n// ***\n\nconst ItemCard = styled.div`\n  border-bottom: 1px solid black;\n  margin-top: 2px;\n  padding: 10px;\n  padding-right: 0px;\n`;\n\nconst Button = styled.button`\n  border-radius: 5px;\n  border: 1px solid grey;\n  padding: 7px;\n  margin-left: 5px;\n`;\n\n/** Make a reusable component for these components */\nconst Icon = styled.span`\n  font-size: 18px;\n  color: grey;\n`;\n\nclass GroceryItem extends Component {\n  render() {\n    const { id, title, editing, dispatch } = this.props;\n    return (\n      <ItemCard>\n        <Row>\n          <Half>\n            <span>{title}</span>\n          </Half>\n          <Half>\n            <Button\n              onClick={() => dispatch(courseActions.deleteCourse(id))}\n            >\n              <Icon className=\"material-icons\">delete</Icon>\n            </Button>\n            <Button\n                onClick={() => dispatch(courseActions.updateCourse(id, title))}\n            >\n              <Icon className=\"material-icons\">create</Icon>\n            </Button>\n          </Half>\n        </Row>\n      </ItemCard>\n    );\n  }\n}\n\nexport default connect()(GroceryItem);\n","import { CREATE_COURSE, DELETE_COURSE, UPDATE_COURSE } from \"./actionTypes\";\n\n// Action Creators\nexport function createCourse(course) {\n  return {\n    type: CREATE_COURSE,\n    course\n  };\n}\n\nexport function deleteCourse(index) {\n  return {\n    type: DELETE_COURSE,\n    index\n  };\n}\n\n// *** WIP\n\nexport function updateCourse(index, title) {\n  return {\n    type: UPDATE_COURSE,\n    index,\n    title\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n// Make a common file for this styled-component\nconst InputText = styled.input.attrs({\n    type: \"text\"\n})`\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  margin-left: 10px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 7px;\n`;\n\nconst IconAdd = styled.span`\n  font-size: 18px;\n  color: black;\n`;\n\nclass GroceryEditForm extends Component {\n    render() {\n        const { handleEdit, handleChange, courseTitle } = this.props;\n        return (\n            <form onSubmit={handleEdit}>\n                <Row>\n                    <InputText onChange={handleChange} value={courseTitle} />\n                    <Button type=\"submit\">\n                        <IconAdd className=\"material-icons\">save</IconAdd>\n                    </Button>\n                </Row>\n            </form>\n        );\n    }\n}\n\nexport default GroceryEditForm;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as courseActions from \"../redux/actions/courseActions\";\nimport PropTypes from \"prop-types\";\nimport GroceryForm from \"../components/GroceryForm\";\nimport GroceryItem from \"../components/GroceryItem\";\nimport GroceryEditForm from \"../components/GroceryEditForm\";\nimport styled from \"styled-components\";\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst GroceryCard = styled.div`\n  margin: 10px;\n`;\n\nclass GroceryContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: {\n        id: 0,\n        title: \"\",\n        editing: false,\n      }\n    };\n  }\n\n  handleChange = e => {\n    const course = { ...this.state.course, title: e.target.value };\n    this.setState({ course });\n  };\n\n  handleEditChange = () => {\n    console.log(\"handleEditChange\")\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.course.title !== \"\") {\n      this.props.dispatch(courseActions.createCourse(this.state.course));\n      this.setState({\n        course: {\n          id: this.state.course.id + 1,\n          // How to transform it into a dynamic id, where there will be no \"hole\" when an id will be deleted ?\n          title: \"\",\n        }\n      });\n    }\n  };\n\n  handleEdit = e => {\n    console.log(\"handleEdit\")\n  }\n\n  render() {\n    const { courses } = this.props;\n    return (\n      <Row>\n        <GroceryCard>\n          <GroceryForm\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            courseTitle={this.state.course.title}\n          />\n          {courses.map((course, index) => (\n              course.editing\n                  ? <GroceryEditForm key={index} id={course.id} title={course.title} editing={course.editing} handleChange={this.handleEditChange} /> // Form to update\n                  : <GroceryItem key={index} id={course.id} title={course.title} />\n              ))}\n        </GroceryCard>\n      </Row>\n    );\n  }\n}\n\nGroceryContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  courses: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.courses\n  };\n}\n\nexport default connect(mapStateToProps)(GroceryContainer);\n","import React from \"react\";\nimport GroceryContainer from \"./containers/GroceryContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <GroceryContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport courses from \"./courseReducer\";\n\nconst rootReducer = combineReducers({\n  courses\n});\n\nexport default rootReducer;\n","import { CREATE_COURSE, DELETE_COURSE, UPDATE_COURSE } from \"../actions/actionTypes\";\n\nexport default function courseReducer(state = [], action) {\n  switch (action.type) {\n    case CREATE_COURSE:\n      return [...state, { ...action.course }];\n    case DELETE_COURSE:\n      return state.filter(course => course.id !== action.index);\n    case UPDATE_COURSE:\n      return state.map((course) => course.id === action.index ? { ...course, editing: !course.editing, title: course.title, } : course )\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n\nexport default function configureStore() {\n  // Add support for Redux dev tools\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n  );\n}\n"],"sourceRoot":""}